{"version":3,"file":"css-camera.js","sources":["../src/Transform.ts","../src/constants/error.ts","../src/utils/helper.ts","../src/constants/default.ts","../src/constants/math.ts","../src/Camera.ts"],"sourcesContent":["import { vec3, quat } from 'gl-matrix';\n\nclass Transform {\n  private _position: vec3;\n  private _scale: vec3;\n  private _rotation: vec3;\n  private _perspective: number;\n\n  public get position() { return this._position; }\n  public get scale() { return this._scale; }\n  public get rotation() { return this._rotation; }\n  public get perspective() { return this._perspective; }\n\n  public get cameraCSS() {\n    const perspective = this._perspective;\n    const rotation = this._rotation;\n\n    // tslint:disable-next-line: max-line-length\n    return `translateZ(${perspective}px) rotateY(${rotation[1]}deg) rotateZ(${rotation[2]}deg) rotateX(${rotation[0]}deg)`;\n  }\n\n  public get worldCSS() {\n    const perspective = this._perspective;\n    const position = this._position;\n\n    return `translate3d(${-position[0]}px, ${-position[1]}px, ${-position[2] - perspective}px)`;\n  }\n\n  public set perspective(val: number) {\n    this._perspective = val;\n  }\n\n  constructor() {\n    this._position = vec3.create();\n    this._scale = vec3.fromValues(1, 1, 1);\n    this._rotation = vec3.create();\n    this._perspective = 0;\n  }\n\n  public translate(x: number, y: number, z: number) {\n    const transVec = vec3.fromValues(x, y, z);\n    const rotation = this._rotation;\n    const rotQuat = quat.create();\n    quat.fromEuler(rotQuat, rotation[0], rotation[1], rotation[2]);\n    quat.invert(rotQuat, rotQuat);\n    vec3.transformQuat(transVec, transVec, rotQuat);\n\n    vec3.add(this._position, this._position, transVec);\n  }\n\n  public absTranslate(x: number, y: number, z: number) {\n    vec3.add(this._position, this._position, vec3.fromValues(x, y, z));\n  }\n\n  public rotateX(deg: number) {\n    this._rotation[0] += deg;\n  }\n\n  public rotateY(deg: number) {\n    this._rotation[1] += deg;\n  }\n\n  public rotateZ(deg: number) {\n    this._rotation[2] += deg;\n  }\n}\n\nexport default Transform;\n","export const BASE_ELEMENT_NOT_EXIST = 'Base element doesn\\'t exist.';\nexport const MUST_STRING_OR_ELEMENT = 'Element should be provided in string or HTMLElement.';\n","import { mat4 } from 'gl-matrix';\nimport { BASE_ELEMENT_NOT_EXIST, MUST_STRING_OR_ELEMENT } from '../constants/error';\nimport { Matrix4x4 } from '../types';\n\nexport const getElement = (el: string | HTMLElement): HTMLElement => {\n    if (typeof el === 'string') {\n        const queryResult = document.querySelector(el);\n        if (!queryResult) {\n            throw new Error(BASE_ELEMENT_NOT_EXIST);\n        }\n        return queryResult as HTMLElement;\n    } else if (el.nodeName && el.nodeType === 1) {\n        return el;\n    } else {\n        throw new Error(MUST_STRING_OR_ELEMENT);\n    }\n};\n\nexport function applyCSS(element: HTMLElement, cssObj: { [keys: string]: string }): void {\n  Object.keys(cssObj).forEach(property => {\n    (element.style as any)[property] = cssObj[property];\n  });\n}\n\nexport function getTransformMatrix(elStyle: CSSStyleDeclaration): mat4 {\n  const trVal = elStyle.getPropertyValue('transform');\n  const transformStr = /\\(((\\s|\\S)+)\\)/.exec(trVal);\n  const matrixVal = transformStr\n    ? transformStr[1].split(',').map(val => parseFloat(val)) as Matrix4x4\n    : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1] as Matrix4x4;\n  const matrix = mat4.fromValues(...matrixVal);\n\n  return matrix;\n}\n\nexport function findIndex<T>(iterable: T[], callback: (el: T) => boolean): number {\n  for (let i = 0; i < iterable.length; i += 1) {\n    const element = iterable[i];\n    if (element && callback(element)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n// return [0, 1, ...., max - 1]\nexport function range(max: number): number[] {\n  const counterArray: number[] = [];\n  for (let i = 0; i < max; i += 1) {\n    counterArray[i] = i;\n  }\n  return counterArray;\n}\n\nexport function degToRad(deg: number): number {\n  return Math.PI * deg / 180;\n}\n","export default {\n  FOV: 50,\n  ORTHOGRAPHIC: false,\n  STYLE_VIEWPORT: {\n    width: '100%',\n    height: '100%',\n    'transform-style': 'preserve-3d',\n  },\n  CLASS: {\n    VIEWPORT: 'cc-viewport',\n    CAMERA: 'cc-camera',\n    WORLD: 'cc-world',\n  },\n};\n","import { Matrix4x4 } from '../types';\n\nexport const IdentityMatrix4x4: Matrix4x4 = [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1,\n];\n","import { mat4 } from 'gl-matrix';\nimport Transform from './Transform';\nimport { getElement, applyCSS, getTransformMatrix, findIndex } from './utils/helper';\nimport DEFAULT from './constants/default';\nimport { Matrix4x4 } from './types';\nimport { IdentityMatrix4x4 } from './constants/math';\n\nabstract class Camera {\n  private _element: HTMLElement;\n  private _viewportEl: HTMLElement;\n  private _cameraEl: HTMLElement;\n  private _worldEl: HTMLElement;\n\n  private _transform: Transform;\n\n  public get transform() { return this._transform; }\n  public get element() { return this._element; }\n  public get viewportEl() { return this._viewportEl; }\n  public get cameraEl() { return this._cameraEl; }\n\n  constructor(el: string | HTMLElement) {\n    this._element = getElement(el);\n    this._transform = new Transform();\n\n    const element = this._element;\n    const viewport = document.createElement('div');\n    applyCSS(viewport, DEFAULT.STYLE_VIEWPORT);\n\n    const camera = viewport.cloneNode() as HTMLElement;\n    const world = viewport.cloneNode() as HTMLElement;\n\n    viewport.className = DEFAULT.CLASS.VIEWPORT;\n    camera.className = DEFAULT.CLASS.CAMERA;\n    world.className = DEFAULT.CLASS.WORLD;\n\n    camera.appendChild(world);\n    viewport.appendChild(camera);\n\n    this._viewportEl = viewport;\n    this._cameraEl = camera;\n    this._worldEl = world;\n\n    // EL's PARENT -> VIEWPORT -> CAMERA -> WORLD -> EL\n    element.parentElement!.insertBefore(viewport, element);\n    world.appendChild(element);\n  }\n\n  public focus(element: HTMLElement, worldMatrix: Matrix4x4 = IdentityMatrix4x4) {\n    const focusMatrix = this.getFocusMatrix(element, worldMatrix);\n\n    console.log(focusMatrix);\n  }\n\n  public getFocusMatrix(element: HTMLElement, worldMatrix: Matrix4x4 = IdentityMatrix4x4): mat4 {\n    const elements = [];\n    while (element) {\n      elements.push(element);\n      if (element === this._element) break;\n      element = element.parentElement!;\n    }\n\n    // Order by shallow to deep\n    elements.reverse();\n\n    const elStyles = elements.map(el => window.getComputedStyle(el));\n    // From this._element to element's first parent\n    // Find most element that transform-style is not preserve-3d\n    // As all childs of that element is affected by its matrix\n    const firstFlatIndex = findIndex(elStyles, style => style.transformStyle !== 'preserve-3d');\n    if (firstFlatIndex >= 0) {\n      elStyles.splice(firstFlatIndex + 1);\n    }\n\n    let matrix = mat4.fromValues(...worldMatrix);\n    elStyles.forEach(style => {\n      matrix = mat4.mul(matrix, matrix, getTransformMatrix(style)) ;\n    });\n\n    return matrix;\n  }\n\n  public setPerspective(val: number) {\n    applyCSS(this._viewportEl, { perspective: `${val}px` });\n    this._transform.perspective = val;\n    this.update();\n  }\n\n  public update() {\n    const transform = this._transform;\n\n    this._cameraEl.style.transform = transform.cameraCSS;\n    this._worldEl.style.transform = transform.worldCSS;\n  }\n}\n\nexport default Camera;\n"],"names":["_position","vec3","create","_scale","fromValues","_rotation","_perspective","Object","val","perspective","rotation","position","x","y","z","transVec","rotQuat","quat","fromEuler","invert","transformQuat","add","deg","BASE_ELEMENT_NOT_EXIST","MUST_STRING_OR_ELEMENT","getElement","el","queryResult","document","querySelector","Error","nodeName","nodeType","applyCSS","element","cssObj","keys","forEach","property","style","getTransformMatrix","elStyle","trVal","getPropertyValue","transformStr","exec","matrixVal","split","map","parseFloat","matrix","mat4","findIndex","iterable","callback","i","length","FOV","ORTHOGRAPHIC","STYLE_VIEWPORT","width","height","CLASS","VIEWPORT","CAMERA","WORLD","IdentityMatrix4x4","_element","_transform","Transform","viewport","createElement","DEFAULT","camera","cloneNode","world","className","appendChild","_viewportEl","_cameraEl","_worldEl","parentElement","insertBefore","worldMatrix","focusMatrix","getFocusMatrix","console","log","elements","push","reverse","elStyles","window","getComputedStyle","firstFlatIndex","transformStyle","splice","mul","update","transform","cameraCSS","worldCSS"],"mappings":"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"}