{"version":3,"file":"css-camera.esm.js","sources":["../src/Transform.ts","../src/constants/error.ts","../src/utils/helper.ts","../src/constants/default.ts","../src/constants/math.ts","../src/Camera.ts"],"sourcesContent":["import { vec3, quat } from 'gl-matrix';\n\nclass Transform {\n  private _position: vec3;\n  private _scale: vec3;\n  private _rotation: vec3;\n  private _perspective: number;\n\n  public get position() { return this._position; }\n  public get scale() { return this._scale; }\n  public get rotation() { return this._rotation; }\n  public get perspective() { return this._perspective; }\n\n  public get cameraCSS() {\n    const perspective = this._perspective;\n    const rotation = this._rotation;\n\n    // tslint:disable-next-line: max-line-length\n    return `translateZ(${perspective}px) rotateY(${rotation[1]}deg) rotateZ(${rotation[2]}deg) rotateX(${rotation[0]}deg)`;\n  }\n\n  public get worldCSS() {\n    const perspective = this._perspective;\n    const position = this._position;\n\n    return `translate3d(${-position[0]}px, ${-position[1]}px, ${-position[2] - perspective}px)`;\n  }\n\n  public set perspective(val: number) {\n    this._perspective = val;\n  }\n\n  constructor() {\n    this._position = vec3.create();\n    this._scale = vec3.fromValues(1, 1, 1);\n    this._rotation = vec3.create();\n    this._perspective = 0;\n  }\n\n  public translate(x: number, y: number, z: number) {\n    const transVec = vec3.fromValues(x, y, z);\n    const rotation = this._rotation;\n    const rotQuat = quat.create();\n    quat.fromEuler(rotQuat, rotation[0], rotation[1], rotation[2]);\n    quat.invert(rotQuat, rotQuat);\n    vec3.transformQuat(transVec, transVec, rotQuat);\n\n    vec3.add(this._position, this._position, transVec);\n  }\n\n  public absTranslate(x: number, y: number, z: number) {\n    vec3.add(this._position, this._position, vec3.fromValues(x, y, z));\n  }\n\n  public rotateX(deg: number) {\n    this._rotation[0] += deg;\n  }\n\n  public rotateY(deg: number) {\n    this._rotation[1] += deg;\n  }\n\n  public rotateZ(deg: number) {\n    this._rotation[2] += deg;\n  }\n}\n\nexport default Transform;\n","export const BASE_ELEMENT_NOT_EXIST = 'Base element doesn\\'t exist.';\nexport const MUST_STRING_OR_ELEMENT = 'Element should be provided in string or HTMLElement.';\n","import { mat4 } from 'gl-matrix';\nimport { BASE_ELEMENT_NOT_EXIST, MUST_STRING_OR_ELEMENT } from '../constants/error';\nimport { Matrix4x4 } from '../types';\n\nexport const getElement = (el: string | HTMLElement): HTMLElement => {\n    if (typeof el === 'string') {\n        const queryResult = document.querySelector(el);\n        if (!queryResult) {\n            throw new Error(BASE_ELEMENT_NOT_EXIST);\n        }\n        return queryResult as HTMLElement;\n    } else if (el.nodeName && el.nodeType === 1) {\n        return el;\n    } else {\n        throw new Error(MUST_STRING_OR_ELEMENT);\n    }\n};\n\nexport function applyCSS(element: HTMLElement, cssObj: { [keys: string]: string }): void {\n  Object.keys(cssObj).forEach(property => {\n    (element.style as any)[property] = cssObj[property];\n  });\n}\n\nexport function getTransformMatrix(elStyle: CSSStyleDeclaration): mat4 {\n  const trVal = elStyle.getPropertyValue('transform');\n  const transformStr = /\\(((\\s|\\S)+)\\)/.exec(trVal);\n  const matrixVal = transformStr\n    ? transformStr[1].split(',').map(val => parseFloat(val)) as Matrix4x4\n    : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1] as Matrix4x4;\n  const matrix = mat4.fromValues(...matrixVal);\n\n  return matrix;\n}\n\nexport function findIndex<T>(iterable: T[], callback: (el: T) => boolean): number {\n  for (let i = 0; i < iterable.length; i += 1) {\n    const element = iterable[i];\n    if (element && callback(element)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n// return [0, 1, ...., max - 1]\nexport function range(max: number): number[] {\n  const counterArray: number[] = [];\n  for (let i = 0; i < max; i += 1) {\n    counterArray[i] = i;\n  }\n  return counterArray;\n}\n\nexport function degToRad(deg: number): number {\n  return Math.PI * deg / 180;\n}\n","export default {\n  FOV: 50,\n  ORTHOGRAPHIC: false,\n  STYLE_VIEWPORT: {\n    width: '100%',\n    height: '100%',\n    'transform-style': 'preserve-3d',\n  },\n  CLASS: {\n    VIEWPORT: 'cc-viewport',\n    CAMERA: 'cc-camera',\n    WORLD: 'cc-world',\n  },\n};\n","import { Matrix4x4 } from '../types';\n\nexport const IdentityMatrix4x4: Matrix4x4 = [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1,\n];\n","import { mat4 } from 'gl-matrix';\nimport Transform from './Transform';\nimport { getElement, applyCSS, getTransformMatrix, findIndex } from './utils/helper';\nimport DEFAULT from './constants/default';\nimport { Matrix4x4 } from './types';\nimport { IdentityMatrix4x4 } from './constants/math';\n\nabstract class Camera {\n  private _element: HTMLElement;\n  private _viewportEl: HTMLElement;\n  private _cameraEl: HTMLElement;\n  private _worldEl: HTMLElement;\n\n  private _transform: Transform;\n\n  public get transform() { return this._transform; }\n  public get element() { return this._element; }\n  public get viewportEl() { return this._viewportEl; }\n  public get cameraEl() { return this._cameraEl; }\n\n  constructor(el: string | HTMLElement) {\n    this._element = getElement(el);\n    this._transform = new Transform();\n\n    const element = this._element;\n    const viewport = document.createElement('div');\n    applyCSS(viewport, DEFAULT.STYLE_VIEWPORT);\n\n    const camera = viewport.cloneNode() as HTMLElement;\n    const world = viewport.cloneNode() as HTMLElement;\n\n    viewport.className = DEFAULT.CLASS.VIEWPORT;\n    camera.className = DEFAULT.CLASS.CAMERA;\n    world.className = DEFAULT.CLASS.WORLD;\n\n    camera.appendChild(world);\n    viewport.appendChild(camera);\n\n    this._viewportEl = viewport;\n    this._cameraEl = camera;\n    this._worldEl = world;\n\n    // EL's PARENT -> VIEWPORT -> CAMERA -> WORLD -> EL\n    element.parentElement!.insertBefore(viewport, element);\n    world.appendChild(element);\n  }\n\n  public focus(element: HTMLElement, worldMatrix: Matrix4x4 = IdentityMatrix4x4) {\n    const focusMatrix = this.getFocusMatrix(element, worldMatrix);\n\n    console.log(focusMatrix);\n  }\n\n  public getFocusMatrix(element: HTMLElement, worldMatrix: Matrix4x4 = IdentityMatrix4x4): mat4 {\n    const elements = [];\n    while (element) {\n      elements.push(element);\n      if (element === this._element) break;\n      element = element.parentElement!;\n    }\n\n    // Order by shallow to deep\n    elements.reverse();\n\n    const elStyles = elements.map(el => window.getComputedStyle(el));\n    // From this._element to element's first parent\n    // Find most element that transform-style is not preserve-3d\n    // As all childs of that element is affected by its matrix\n    const firstFlatIndex = findIndex(elStyles, style => style.transformStyle !== 'preserve-3d');\n    if (firstFlatIndex >= 0) {\n      elStyles.splice(firstFlatIndex + 1);\n    }\n\n    let matrix = mat4.fromValues(...worldMatrix);\n    elStyles.forEach(style => {\n      matrix = mat4.mul(matrix, matrix, getTransformMatrix(style)) ;\n    });\n\n    return matrix;\n  }\n\n  public setPerspective(val: number) {\n    applyCSS(this._viewportEl, { perspective: `${val}px` });\n    this._transform.perspective = val;\n    this.update();\n  }\n\n  public update() {\n    const transform = this._transform;\n\n    this._cameraEl.style.transform = transform.cameraCSS;\n    this._worldEl.style.transform = transform.worldCSS;\n  }\n}\n\nexport default Camera;\n"],"names":["_position","vec3","create","_scale","fromValues","_rotation","_perspective","Object","val","perspective","rotation","position","x","y","z","transVec","rotQuat","quat","fromEuler","invert","transformQuat","add","deg","BASE_ELEMENT_NOT_EXIST","MUST_STRING_OR_ELEMENT","getElement","el","queryResult","document","querySelector","Error","nodeName","nodeType","applyCSS","element","cssObj","keys","forEach","property","style","getTransformMatrix","elStyle","trVal","getPropertyValue","transformStr","exec","matrixVal","split","map","parseFloat","matrix","mat4","findIndex","iterable","callback","i","length","FOV","ORTHOGRAPHIC","STYLE_VIEWPORT","width","height","CLASS","VIEWPORT","CAMERA","WORLD","IdentityMatrix4x4","_element","_transform","Transform","viewport","createElement","DEFAULT","camera","cloneNode","world","className","appendChild","_viewportEl","_cameraEl","_worldEl","parentElement","insertBefore","worldMatrix","focusMatrix","getFocusMatrix","console","log","elements","push","reverse","elStyles","window","getComputedStyle","firstFlatIndex","transformStyle","splice","mul","update","transform","cameraCSS","worldCSS"],"mappings":"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"}