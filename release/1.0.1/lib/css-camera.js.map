{"version":3,"file":"css-camera.js","sources":["../src/constants/error.ts","../src/utils/helper.ts","../src/utils/math.ts","../src/constants/default.ts","../src/CSSCamera.ts"],"sourcesContent":["export const ELEMENT_NOT_EXIST = (selector: string) => `Element with selector \"${selector}\" doesn't exist.`;\nexport const MUST_STRING_OR_ELEMENT = (received: any) => `Element should be provided in string or HTMLElement. Received: ${received}`;\n","import { mat4, vec3 } from 'gl-matrix';\nimport { ELEMENT_NOT_EXIST, MUST_STRING_OR_ELEMENT } from '../constants/error';\nimport { Matrix4x4, Offset } from '../types';\n\nexport const getElement = (el: string | HTMLElement, baseElement?: HTMLElement): HTMLElement => {\n    if (typeof el === 'string') {\n        const queryResult = baseElement\n          ? baseElement.querySelector(el)\n          : document.querySelector(el);\n        if (!queryResult) {\n            throw new Error(ELEMENT_NOT_EXIST(el));\n        }\n        return queryResult as HTMLElement;\n    } else if (el.nodeName && el.nodeType === 1) {\n        return el;\n    } else {\n        throw new Error(MUST_STRING_OR_ELEMENT(el));\n    }\n};\n\nexport function applyCSS(element: HTMLElement, cssObj: { [keys: string]: string }): void {\n  Object.keys(cssObj).forEach(property => {\n    (element.style as any)[property] = cssObj[property];\n  });\n}\n\nexport function getTransformMatrix(elStyle: CSSStyleDeclaration): mat4 {\n  const trVal = elStyle.getPropertyValue('transform');\n  const transformStr = /\\(((\\s|\\S)+)\\)/.exec(trVal);\n  const matrixVal = transformStr\n    ? transformStr[1].split(',').map(val => parseFloat(val)) as Matrix4x4\n    : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1] as Matrix4x4;\n  if (matrixVal.length === 16 ) {\n    return mat4.fromValues(...matrixVal);\n  } else {\n    // Convert 2d matrix(length 6) to 3d\n    const matrix = mat4.create();\n    mat4.identity(matrix);\n\n    matrix[0] = matrixVal[0];\n    matrix[1] = matrixVal[1];\n    matrix[4] = matrixVal[2];\n    matrix[5] = matrixVal[3];\n    matrix[12] = matrixVal[4];\n    matrix[13] = matrixVal[5];\n\n    return matrix;\n  }\n}\n\nexport function getOffsetFromParent(currentOffset: Offset, parentOffset: Offset): vec3 {\n  const offsetLeft = currentOffset.left + (currentOffset.width - parentOffset.width) / 2;\n  const offsetTop = currentOffset.top + (currentOffset.height - parentOffset.height) / 2;\n\n  return vec3.fromValues(offsetLeft, offsetTop, 0);\n}\n\nexport function getRotateOffset(elStyle: CSSStyleDeclaration, currentOffset: Offset): vec3 {\n  const axis = (elStyle.transformOrigin as string)\n    .split(' ')\n    .map(str => parseFloat(str.substring(0, str.length - 2)));\n  const ax = axis[0] - currentOffset.width / 2;\n  const ay = axis[1] - currentOffset.height / 2;\n\n  return vec3.fromValues(ax, ay, 0);\n}\n\nexport function findIndex<T>(iterable: T[], callback: (el: T) => boolean): number {\n  for (let i = 0; i < iterable.length; i += 1) {\n    const element = iterable[i];\n    if (element && callback(element)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n// return [0, 1, ...., max - 1]\nexport function range(max: number): number[] {\n  const counterArray: number[] = [];\n  for (let i = 0; i < max; i += 1) {\n    counterArray[i] = i;\n  }\n  return counterArray;\n}\n\nexport function clamp(val: number, min: number, max: number): number {\n  return Math.max(Math.min(val, max), min);\n}\n\nexport function assign(target: object, ...srcs: object[]): object {\n  srcs.forEach(source => {\n    Object.keys(source).forEach(key => {\n      const value = (source as any)[key];\n      (target as any)[key] = value;\n    });\n  });\n\n  return target;\n}\n","import { mat4, quat, vec3 } from 'gl-matrix';\nimport { clamp } from './helper';\n\nexport function degToRad(deg: number): number {\n  return Math.PI * deg / 180;\n}\n\nexport function radToDeg(rad: number): number {\n  return 180 * rad / Math.PI;\n}\n\n// From Three.js https://github.com/mrdoob/three.js/blob/dev/src/math/Euler.js\nexport function quatToEuler(q: quat): vec3 {\n  const rotM = mat4.create();\n  mat4.fromQuat(rotM, q);\n\n  const m11 = rotM[0];\n  const m12 = rotM[4];\n  // const m13 = rotM[8];\n  const m21 = rotM[1];\n  const m22 = rotM[5];\n  // const m23 = rotM[9];\n  const m31 = rotM[2];\n  const m32 = rotM[6];\n  const m33 = rotM[10];\n\n  const euler = vec3.create();\n\n  // ZYX\n  euler[1] = Math.asin(-clamp(m31, -1, 1));\n  if (Math.abs(m31) < 0.99999) {\n    euler[0] = Math.atan2(m32, m33);\n    euler[2] = Math.atan2(m21, m11);\n  } else {\n    euler[0] = 0;\n    euler[2] = Math.atan2(-m12, m22);\n  }\n\n  return euler.map(val => radToDeg(val)) as vec3;\n}\n","export const STYLE = {\n  VIEWPORT: {\n    width: '100%',\n    height: '100%',\n    'transform-style': 'preserve-3d',\n    overflow: 'hidden',\n  },\n  CAMERA: {\n    width: '100%',\n    height: '100%',\n    'transform-style': 'preserve-3d',\n    'will-change': 'transform',\n  },\n  WORLD: {\n    width: '100%',\n    height: '100%',\n    'transform-style': 'preserve-3d',\n    'will-change': 'transform',\n  },\n};\n\nexport const CLASS = {\n  VIEWPORT: 'cc-viewport',\n  CAMERA: 'cc-camera',\n  WORLD: 'cc-world',\n};\n\nexport const OPTIONS = {\n  position: [0, 0, 0],\n  scale: [1, 1, 1],\n  rotation: [0, 0, 0],\n  perspective: 0,\n  rotateOffset: 0,\n};\n\nexport const UPDATE_OPTIONS = {\n  property: 'transform',\n  timingFunction: 'ease-out',\n  delay: '0ms',\n};\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { getElement, applyCSS, getTransformMatrix, findIndex, getOffsetFromParent, getRotateOffset, assign } from './utils/helper';\nimport { quatToEuler } from './utils/math';\nimport * as DEFAULT from './constants/default';\nimport { Offset, UpdateOption, ValueOf, Options } from './types';\n\nclass CSSCamera {\n  private _element: HTMLElement;\n  private _viewportEl: HTMLElement;\n  private _cameraEl: HTMLElement;\n  private _worldEl: HTMLElement;\n\n  private _position: vec3;\n  private _scale: vec3;\n  private _rotation: vec3;\n  private _perspective: number;\n  private _rotateOffset: number;\n  private _updateTimer: number;\n\n  /**\n   * Current version of CSSCamera.\n   * @example\n   * console.log(CSSCamera.VERSION); // ex) 1.0.0\n   * @type {string}\n   */\n  static get VERSION() { return '#__VERSION__#'; }\n\n  /**\n   * The element provided in the constructor.\n   * @example\n   * const camera = new CSSCamera(el);\n   * console.log(camera.element === el); // true\n   * @type {HTMLElement}\n   */\n  public get element() { return this._element; }\n\n  /**\n   * The reference of viewport DOM element.\n   * @type {HTMLElement}\n   */\n  public get viewportEl() { return this._viewportEl; }\n\n  /**\n   * The reference of camera DOM element.\n   * @type {HTMLElement}\n   */\n  public get cameraEl() { return this._cameraEl; }\n\n  /**\n   * The reference of world DOM element.\n   * @type {HTMLElement}\n   */\n  public get worldEl() { return this._worldEl; }\n\n  /**\n   * The current position as number array([x, y, z]).\n   * @example\n   * const camera = new CSSCamera(el);\n   * console.log(camera.position); // [0, 0, 0];\n   * camera.position = [0, 0, 300];\n   * console.log(camera.position); // [0, 0, 300];\n   * @type {number[]}\n   */\n  public get position() { return [...this._position]; }\n\n  /**\n   * The current scale as number array([x, y, z]).\n   * @example\n   * const camera = new CSSCamera(el);\n   * console.log(camera.scale); // [1, 1, 1];\n   * camera.scale = [5, 1, 1];\n   * console.log(camera.scale); // [5, 1, 1];\n   * @type {number[]}\n   */\n  public get scale() { return [...this._scale]; }\n\n  /**\n   * The current Euler rotation angles in degree as number array([x, y, z]).\n   * @example\n   * const camera = new CSSCamera(el);\n   * console.log(camera.rotation); // [0, 0, 0];\n   * camera.rotation = [90, 0, 0];\n   * console.log(camera.rotation); // [90, 0, 0];\n   * @type {number[]}\n   */\n  public get rotation() { return [...this._rotation]; }\n\n  /**\n   * The current quaternion rotation as number array([x, y, z, w]).\n   * @example\n   * const camera = new CSSCamera(el);\n   * console.log(camera.quaternion); // [0, 0, 0, 1];\n   * camera.rotation = [90, 0, 0];\n   * console.log(camera.quaternion); // [0.7071067690849304, 0, 0, 0.7071067690849304];\n   * camera.quaternion = [0, 0, 0, 1];\n   * console.log(camera.rotation); // [0, -0, 0];\n   * @type {number[]}\n   */\n  public get quaternion() {\n    const r = this._rotation;\n    const quaternion = quat.fromEuler(quat.create(), r[0], r[1], r[2]);\n\n    return [...quaternion];\n  }\n\n  /**\n   * The current perspective value that will be applied to viewport element.\n   * @example\n   * const camera = new CSSCamera(el);\n   * camera.perspective = 300;\n   * console.log(camera.perspective); // 300\n   * @type {number}\n   */\n  public get perspective() { return this._perspective; }\n\n  /**\n   * The current rotate offset value that will be applied to camera element.\n   * The camera will be as far away from the focal point as this value.\n   * |![rot0](https://woodneck.github.io/css-camera/asset/rot0.gif)|![rot150](https://woodneck.github.io/css-camera/asset/rot150.gif)|\n   * |:---:|:---:|\n   * @example\n   * const camera = new CSSCamera(el);\n   * camera.perspective = 300;\n   * console.log(camera.cameraCSS); // scale3d(1, 1, 1) translateZ(300px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n   * camera.rotateOffset = 100;\n   * console.log(camera.cameraCSS); // scale3d(1, 1, 1) translateZ(400px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n   * @type {number}\n   */\n  public get rotateOffset() { return this._rotateOffset; }\n\n  /**\n   * CSS string can be applied to camera element based on current transform.\n   * @example\n   * const camera = new CSSCamera(el);\n   * camera.perspective = 300;\n   * console.log(camera.cameraCSS); // scale3d(1, 1, 1) translateZ(300px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n   * @type {string}\n   */\n  public get cameraCSS() {\n    const perspective = this._perspective;\n    const rotateOffset = this._rotateOffset;\n    const rotation = this._rotation;\n    const scale = this._scale;\n\n    // Rotate in order of Z - Y - X\n    // tslint:disable-next-line: max-line-length\n    return `scale3d(${scale[0]}, ${scale[1]}, ${scale[2]}) translateZ(${perspective - rotateOffset}px) rotateX(${rotation[0]}deg) rotateY(${rotation[1]}deg) rotateZ(${rotation[2]}deg)`;\n  }\n\n  /**\n   * CSS string can be applied to world element based on current transform.\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.worldCSS); // \"translate3d(0px, 0px, 0px)\";\n   * camera.translate(0, 0, 300);\n   * console.log(camera.worldCSS); // \"translate3d(0px, 0px, -300px)\";\n   * ```\n   * @type {string}\n   */\n  public get worldCSS() {\n    const position = this._position;\n\n    return `translate3d(${-position[0]}px, ${-position[1]}px, ${-position[2]}px)`;\n  }\n\n  public set position(val: number[]) { this._position = vec3.fromValues(val[0], val[1], val[2]); }\n  public set scale(val: number[]) { this._scale = vec3.fromValues(val[0], val[1], val[2]); }\n  public set rotation(val: number[]) { this._rotation = vec3.fromValues(val[0], val[1], val[2]); }\n  public set quaternion(val: number[]) { this._rotation = quatToEuler(quat.fromValues(val[0], val[1], val[2], val[3])); }\n  public set perspective(val: number) { this._perspective = val; }\n  public set rotateOffset(val: number) { this._rotateOffset = val; }\n\n  /**\n   * Create new CSSCamera with given element / selector.\n   * @param - The element to apply camera. Can be HTMLElement or CSS selector.\n   * @param {Partial<Options>} [options] Camera options\n   * @param {number[]} [options.position=[0, 0, 0]] Initial position of the camera.\n   * @param {number[]} [options.scale=[1, 1, 1]] Initial scale of the camera.\n   * @param {number[]} [options.rotation=[0, 0, 0]] Initial Euler rotation angles(x, y, z) of the camera in degree.\n   * @param {number} [options.perspective=0] Initial perspective of the camera.\n   * @param {number} [options.rotateOffset=0] Initial rotate offset of the camera.\n   * @example\n   * const camera = new CSSCamera(\"#el\", {\n   *   position: [0, 0, 150], // Initial pos(x, y, z)\n   *   rotation: [90, 0, 0],  // Initial rotation(x, y, z, in degree)\n   *   perspective: 300       // CSS \"perspective\" value to apply\n   * });\n   */\n  constructor(el: string | HTMLElement, options: Partial<Options> = {}) {\n    this._element = getElement(el);\n\n    const op = assign(assign({}, DEFAULT.OPTIONS), options) as Options;\n\n    this._position = vec3.fromValues(op.position[0], op.position[1], op.position[2]);\n    this._scale = vec3.fromValues(op.scale[0], op.scale[1], op.scale[2]);\n    this._rotation = vec3.fromValues(op.rotation[0], op.rotation[1], op.rotation[2]);\n    this._perspective = op.perspective;\n    this._rotateOffset = op.rotateOffset;\n    this._updateTimer = -1;\n\n    const element = this._element;\n    const viewport = document.createElement('div');\n    const camera = viewport.cloneNode() as HTMLElement;\n    const world = viewport.cloneNode() as HTMLElement;\n\n    viewport.className = DEFAULT.CLASS.VIEWPORT;\n    camera.className = DEFAULT.CLASS.CAMERA;\n    world.className = DEFAULT.CLASS.WORLD;\n\n    applyCSS(viewport, DEFAULT.STYLE.VIEWPORT);\n    applyCSS(camera, DEFAULT.STYLE.CAMERA);\n    applyCSS(world, DEFAULT.STYLE.WORLD);\n\n    camera.appendChild(world);\n    viewport.appendChild(camera);\n\n    this._viewportEl = viewport;\n    this._cameraEl = camera;\n    this._worldEl = world;\n\n    // EL's PARENT -> VIEWPORT -> CAMERA -> WORLD -> EL\n    element.parentElement!.insertBefore(viewport, element);\n    world.appendChild(element);\n\n    this.update(0);\n  }\n\n  /**\n   * Focus a camera to given element.\n   * After focus, element will be in front of camera with no rotation applied.\n   * Also, it will have original width / height if neither [scale](#scale) nor [perspectiveOffset](#perspectiveOffset) is applied.\n   * This method won't work if any of element's parent except camera element has scale applied.\n   * @param - The element to focus. Can be HTMLElement or CSS selector.\n   * @return {CSSCamera} The instance itself\n   */\n  public focus(el: string | HTMLElement): this {\n    const element = getElement(el);\n    const focusMatrix = this._getFocusMatrix(element);\n\n    const rotation = quat.create();\n    const translation = vec3.create();\n    mat4.getRotation(rotation, focusMatrix);\n    mat4.getTranslation(translation, focusMatrix);\n\n    const eulerAngle = quatToEuler(rotation);\n\n    vec3.negate(eulerAngle, eulerAngle);\n\n    this._rotation = eulerAngle;\n    this._position = translation;\n    return this;\n  }\n\n  /**\n   * Translate a camera in its local coordinate space.\n   * For example, `camera.translateLocal(0, 0, -300)` will always move camera to direction where it's seeing.\n   * @param - Amount of horizontal translation, in px.\n   * @param - Amount of vertical translation, in px.\n   * @param - Amount of translation in view direction, in px.\n   * @return {CSSCamera} The instance itself\n   */\n  public translateLocal(x: number = 0, y: number = 0, z: number = 0): this {\n    const position = this._position;\n    const rotation = this._rotation;\n\n    const transVec = vec3.fromValues(x, y, z);\n    const rotQuat = quat.create();\n    quat.fromEuler(rotQuat, -rotation[0], -rotation[1], -rotation[2]);\n    vec3.transformQuat(transVec, transVec, rotQuat);\n\n    vec3.add(position, position, transVec);\n    return this;\n  }\n\n  /**\n   * Translate a camera in world(absolute) coordinate space.\n   * @param - Amount of translation in x axis, in px.\n   * @param - Amount of translation in y axis, in px.\n   * @param - Amount of translation in z axis, in px.\n   * @return {CSSCamera} The instance itself\n   */\n  public translate(x: number = 0, y: number = 0, z: number = 0): this {\n    vec3.add(this._position, this._position, vec3.fromValues(x, y, z));\n\n    return this;\n  }\n\n  /**\n   * Rotate a camera in world(absolute) coordinate space.\n   * @param - Amount of rotation in x axis, in degree.\n   * @param - Amount of rotation in y axis, in degree.\n   * @param - Amount of rotation in z axis, in degree.\n   * @return {CSSCamera} The instance itself\n   */\n  public rotate(x: number = 0, y: number = 0, z: number = 0): this {\n    vec3.add(this._rotation, this._rotation, vec3.fromValues(x, y, z));\n\n    return this;\n  }\n\n  /**\n   * Updates a camera CSS with given duration.\n   * Every other camera transforming properties / methods will be batched until this method is called.\n   * @example\n   * const camera = new CSSCamera(el);\n   * console.log(camera.cameraEl.style.transform); // ''\n   *\n   * camera.perspective = 300;\n   * camera.translate(0, 0, 300);\n   * camera.rotate(0, 90, 0);\n   * console.log(camera.cameraEl.style.transform); // '', Not changed!\n   *\n   * await camera.update(1000); // Camera style is updated.\n   * console.log(camera.cameraEl.style.transform); // scale3d(1, 1, 1) translateZ(300px) rotateX(0deg) rotateY(90deg) rotateZ(0deg)\n   *\n   * // When if you want to apply multiple properties\n   * camera.update(1000, {\n   *   property: \"transform, background-color\",\n   *   timingFunction: \"ease-out, ease-out\", // As same with CSS, you should assign values to each property\n   *   delay: \"0ms, 100ms\"\n   * });\n   * @param - Transition duration in ms.\n   * @param {Partial<UpdateOption>} [options] Transition options.\n   * @param {string} [options.property=\"transform\"] CSS [transition-property](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property) to apply.\n   * @param {string} [options.timingFunction=\"ease-out\"] CSS [transition-timing-function](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function) to apply.\n   * @param {string} [options.delay=\"0ms\"] CSS [transition-delay](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay) to apply.\n   * @return {Promise<CSSCamera>} A promise resolving instance itself\n   */\n  public async update(duration: number = 0, options: Partial<UpdateOption> = {}): Promise<this> {\n    applyCSS(this._viewportEl, { perspective: `${this.perspective}px` });\n    applyCSS(this._cameraEl, { transform: this.cameraCSS });\n    applyCSS(this._worldEl, { transform: this.worldCSS });\n\n    const updateOptions = assign(assign({}, DEFAULT.UPDATE_OPTIONS), options) as UpdateOption;\n\n    if (duration > 0) {\n      if (this._updateTimer > 0) {\n        window.clearTimeout(this._updateTimer);\n      }\n\n      const transitionDuration = `${duration}ms`;\n      const updateOption = Object.keys(updateOptions).reduce((option: {[key: string]: ValueOf<UpdateOption>}, key) => {\n        option[`transition${key.charAt(0).toUpperCase() + key.slice(1)}`] = updateOptions[key as keyof UpdateOption]!;\n        return option;\n      }, {});\n\n      const finalOption = {\n        transitionDuration,\n        ...updateOption,\n      };\n\n      [this._viewportEl, this._cameraEl, this._worldEl].forEach(el => {\n        applyCSS(el, finalOption);\n      });\n    }\n\n    return new Promise(resolve => {\n      // Make sure to use requestAnimationFrame even if duration is 0\n      // To make sure DOM is updated, for successive update() calls.\n      if (duration > 0) {\n        this._updateTimer = window.setTimeout(() => {\n          // Reset transition values\n          [this._viewportEl, this._cameraEl, this._worldEl].forEach(el => {\n            applyCSS(el, { transition: '' });\n          });\n          this._updateTimer = -1;\n          resolve();\n        }, duration);\n      } else {\n        requestAnimationFrame(() => {\n          resolve();\n        });\n      }\n    });\n  }\n\n  private _getFocusMatrix(element: HTMLElement): mat4 {\n    const elements: HTMLElement[] = [];\n    while (element) {\n      elements.push(element);\n      if (element === this._element) break;\n      element = element.parentElement!;\n    }\n\n    // Order by shallow to deep\n    elements.reverse();\n\n    const elStyles = elements.map(el => window.getComputedStyle(el));\n\n    // Find first element that transform-style is not preserve-3d\n    // As all childs of that element is affected by its matrix\n    const firstFlatIndex = findIndex(elStyles, style => style.transformStyle !== 'preserve-3d');\n    if (firstFlatIndex > 0) { // el doesn't have to be preserve-3d'ed\n      elStyles.splice(firstFlatIndex + 1);\n    }\n\n    let parentOffset: Offset = {\n      left: 0,\n      top: 0,\n      width: this.viewportEl.offsetWidth,\n      height: this.viewportEl.offsetHeight,\n    };\n\n    // Accumulated rotation\n    const accRotation = quat.identity(quat.create());\n    // Assume center of screen as (0, 0, 0)\n    const centerPos = vec3.fromValues(0, 0, 0);\n\n    elStyles.forEach((style, idx) => {\n      const el = elements[idx];\n      const currentOffset = {\n        left: el.offsetLeft,\n        top: el.offsetTop,\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n      };\n      const transformMat = getTransformMatrix(style);\n      const offsetFromParent = getOffsetFromParent(currentOffset, parentOffset);\n      vec3.transformQuat(offsetFromParent, offsetFromParent, accRotation);\n\n      vec3.add(centerPos, centerPos, offsetFromParent);\n\n      const rotateOffset = getRotateOffset(style, currentOffset);\n      vec3.transformQuat(rotateOffset, rotateOffset, accRotation);\n\n      const transformOrigin = vec3.clone(centerPos);\n      vec3.add(transformOrigin, transformOrigin, rotateOffset);\n\n      const centerFromOrigin = vec3.create();\n      vec3.sub(centerFromOrigin, centerPos, transformOrigin);\n\n      const invAccRotation = quat.invert(quat.create(), accRotation);\n      vec3.transformQuat(centerFromOrigin, centerFromOrigin, invAccRotation);\n      vec3.transformMat4(centerFromOrigin, centerFromOrigin, transformMat);\n      vec3.transformQuat(centerFromOrigin, centerFromOrigin, accRotation);\n\n      const newCenterPos = vec3.add(vec3.create(), transformOrigin, centerFromOrigin);\n      const rotation = mat4.getRotation(quat.create(), transformMat);\n\n      vec3.copy(centerPos, newCenterPos);\n      quat.mul(accRotation, accRotation, rotation);\n      parentOffset = currentOffset;\n    });\n\n    const perspective = vec3.fromValues(0, 0, this.perspective);\n    vec3.transformQuat(perspective, perspective, accRotation);\n    vec3.add(centerPos, centerPos, perspective);\n\n    const matrix = mat4.create();\n    mat4.fromRotationTranslation(matrix, accRotation, centerPos);\n\n    return matrix;\n  }\n}\n\nexport default CSSCamera;\n"],"names":["ELEMENT_NOT_EXIST","selector","MUST_STRING_OR_ELEMENT","received","getElement","el","baseElement","queryResult","querySelector","document","Error","nodeName","nodeType","applyCSS","element","cssObj","Object","keys","forEach","property","style","getTransformMatrix","elStyle","trVal","getPropertyValue","transformStr","exec","matrixVal","split","map","val","parseFloat","length","mat4","fromValues","matrix","create","identity","getOffsetFromParent","currentOffset","parentOffset","offsetLeft","left","width","offsetTop","top","height","vec3","getRotateOffset","axis","transformOrigin","str","substring","ax","ay","findIndex","iterable","callback","i","clamp","min","max","Math","assign","target","_i","srcs","source","key","value","radToDeg","rad","PI","quatToEuler","q","rotM","fromQuat","m11","m12","m21","m22","m31","m32","m33","euler","asin","abs","atan2","STYLE","VIEWPORT","overflow","CAMERA","WORLD","CLASS","OPTIONS","position","scale","rotation","perspective","rotateOffset","UPDATE_OPTIONS","timingFunction","delay","options","_element","op","DEFAULT","_position","_scale","_rotation","_perspective","_rotateOffset","_updateTimer","viewport","createElement","camera","cloneNode","world","className","appendChild","_viewportEl","_cameraEl","_worldEl","parentElement","insertBefore","update","CSSCamera","r","quaternion","quat","fromEuler","focusMatrix","_getFocusMatrix","translation","getRotation","getTranslation","eulerAngle","negate","x","y","z","transVec","rotQuat","transformQuat","add","duration","Promise","transform","cameraCSS","worldCSS","updateOptions","window","clearTimeout","transitionDuration","updateOption","reduce","option","charAt","toUpperCase","slice","finalOption_1","resolve","_this","setTimeout","transition","requestAnimationFrame","elements","push","reverse","elStyles","getComputedStyle","firstFlatIndex","transformStyle","splice","viewportEl","offsetWidth","offsetHeight","accRotation","centerPos","idx","transformMat","offsetFromParent","clone","centerFromOrigin","sub","invAccRotation","invert","transformMat4","newCenterPos","copy","mul","fromRotationTranslation"],"mappings":"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"}