{"version":3,"file":"css-camera.esm.js","sources":["../src/constants/error.ts","../src/utils/helper.ts","../src/utils/math.ts","../src/constants/default.ts","../src/CSSCamera.ts"],"sourcesContent":["export const ELEMENT_NOT_EXIST = (selector: string) => `Element with selector \"${selector}\" doesn't exist.`;\nexport const MUST_STRING_OR_ELEMENT = (received: any) => `Element should be provided in string or HTMLElement. Received: ${received}`;\n","import { mat4, vec3 } from 'gl-matrix';\nimport { ELEMENT_NOT_EXIST, MUST_STRING_OR_ELEMENT } from '../constants/error';\nimport { Matrix4x4, Offset } from '../types';\n\nexport const getElement = (el: string | HTMLElement, baseElement?: HTMLElement): HTMLElement => {\n    if (typeof el === 'string') {\n        const queryResult = baseElement\n          ? baseElement.querySelector(el)\n          : document.querySelector(el);\n        if (!queryResult) {\n            throw new Error(ELEMENT_NOT_EXIST(el));\n        }\n        return queryResult as HTMLElement;\n    } else if (el.nodeName && el.nodeType === 1) {\n        return el;\n    } else {\n        throw new Error(MUST_STRING_OR_ELEMENT(el));\n    }\n};\n\nexport function applyCSS(element: HTMLElement, cssObj: { [keys: string]: string }): void {\n  Object.keys(cssObj).forEach(property => {\n    (element.style as any)[property] = cssObj[property];\n  });\n}\n\nexport function getTransformMatrix(elStyle: CSSStyleDeclaration): mat4 {\n  const trVal = elStyle.getPropertyValue('transform');\n  const transformStr = /\\(((\\s|\\S)+)\\)/.exec(trVal);\n  const matrixVal = transformStr\n    ? transformStr[1].split(',').map(val => parseFloat(val)) as Matrix4x4\n    : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1] as Matrix4x4;\n  if (matrixVal.length === 16 ) {\n    return mat4.fromValues(...matrixVal);\n  } else {\n    // Convert 2d matrix(length 6) to 3d\n    const matrix = mat4.create();\n    mat4.identity(matrix);\n\n    matrix[0] = matrixVal[0];\n    matrix[1] = matrixVal[1];\n    matrix[4] = matrixVal[2];\n    matrix[5] = matrixVal[3];\n    matrix[12] = matrixVal[4];\n    matrix[13] = matrixVal[5];\n\n    return matrix;\n  }\n}\n\nexport function getOffsetFromParent(currentOffset: Offset, parentOffset: Offset): vec3 {\n  const offsetLeft = currentOffset.left + (currentOffset.width - parentOffset.width) / 2;\n  const offsetTop = currentOffset.top + (currentOffset.height - parentOffset.height) / 2;\n\n  return vec3.fromValues(offsetLeft, offsetTop, 0);\n}\n\nexport function getRotateOffset(elStyle: CSSStyleDeclaration, currentOffset: Offset): vec3 {\n  const axis = (elStyle.transformOrigin as string)\n    .split(' ')\n    .map(str => parseFloat(str.substring(0, str.length - 2)));\n  const ax = axis[0] - currentOffset.width / 2;\n  const ay = axis[1] - currentOffset.height / 2;\n\n  return vec3.fromValues(ax, ay, 0);\n}\n\nexport function findIndex<T>(iterable: T[], callback: (el: T) => boolean): number {\n  for (let i = 0; i < iterable.length; i += 1) {\n    const element = iterable[i];\n    if (element && callback(element)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n// return [0, 1, ...., max - 1]\nexport function range(max: number): number[] {\n  const counterArray: number[] = [];\n  for (let i = 0; i < max; i += 1) {\n    counterArray[i] = i;\n  }\n  return counterArray;\n}\n\nexport function clamp(val: number, min: number, max: number): number {\n  return Math.max(Math.min(val, max), min);\n}\n","import { mat4, quat, vec3 } from 'gl-matrix';\nimport { clamp } from './helper';\n\nexport function degToRad(deg: number): number {\n  return Math.PI * deg / 180;\n}\n\nexport function radToDeg(rad: number): number {\n  return 180 * rad / Math.PI;\n}\n\n// From Three.js https://github.com/mrdoob/three.js/blob/dev/src/math/Euler.js\nexport function quatToEuler(q: quat): vec3 {\n  const rotM = mat4.create();\n  mat4.fromQuat(rotM, q);\n\n  const m11 = rotM[0];\n  const m12 = rotM[4];\n  // const m13 = rotM[8];\n  const m21 = rotM[1];\n  const m22 = rotM[5];\n  // const m23 = rotM[9];\n  const m31 = rotM[2];\n  const m32 = rotM[6];\n  const m33 = rotM[10];\n\n  const euler = vec3.create();\n\n  // ZYX\n  euler[1] = Math.asin(-clamp(m31, -1, 1));\n  if (Math.abs(m31) < 0.99999) {\n    euler[0] = Math.atan2(m32, m33);\n    euler[2] = Math.atan2(m21, m11);\n  } else {\n    euler[0] = 0;\n    euler[2] = Math.atan2(-m12, m22);\n  }\n\n  return euler.map(val => radToDeg(val)) as vec3;\n}\n","export default {\n  FOV: 50,\n  ORTHOGRAPHIC: false,\n  STYLE: {\n    VIEWPORT: {\n      width: '100%',\n      height: '100%',\n      'transform-style': 'preserve-3d',\n      overflow: 'hidden',\n    },\n    CAMERA: {\n      width: '100%',\n      height: '100%',\n      'transform-style': 'preserve-3d',\n      'will-change': 'transform',\n    },\n    WORLD: {\n      width: '100%',\n      height: '100%',\n      'transform-style': 'preserve-3d',\n      'will-change': 'transform',\n    },\n  },\n  CLASS: {\n    VIEWPORT: 'cc-viewport',\n    CAMERA: 'cc-camera',\n    WORLD: 'cc-world',\n  },\n  UPDATE_OPTION: {\n    property: 'transform',\n    timingFunction: 'ease-out',\n    delay: '0s',\n  },\n};\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { getElement, applyCSS, getTransformMatrix, findIndex, getOffsetFromParent, getRotateOffset } from './utils/helper';\nimport { quatToEuler } from './utils/math';\nimport DEFAULT from './constants/default';\nimport { Offset, UpdateOption, ValueOf } from './types';\n\nclass CSSCamera {\n  private _element: HTMLElement;\n  private _viewportEl: HTMLElement;\n  private _cameraEl: HTMLElement;\n  private _worldEl: HTMLElement;\n\n  private _position: vec3;\n  private _scale: vec3;\n  private _rotation: vec3;\n  private _perspective: number;\n  private _perspectiveOffset: number;\n\n  /**\n   * Current version of CSSCamera.\n   * ```\n   * console.log(CSSCamera.VERSION); // ex) 1.0.0\n   * ```\n   * @type {string}\n   */\n  static get VERSION() { return '#__VERSION__#'; }\n\n  /**\n   * The element provided in the constructor.\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.element === el); // true\n   * ```\n   * @type {HTMLElement}\n   */\n  public get element() { return this._element; }\n\n  /**\n   * The reference of viewport DOM element.\n   * @type {HTMLElement}\n   */\n  public get viewportEl() { return this._viewportEl; }\n\n  /**\n   * The reference of camera DOM element.\n   * @type {HTMLElement}\n   */\n  public get cameraEl() { return this._cameraEl; }\n\n  /**\n   * The reference of world DOM element.\n   * @type {HTMLElement}\n   */\n  public get worldEl() { return this._worldEl; }\n\n  /**\n   * The current position as number array([x, y, z]).\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.position); // [0, 0, 0];\n   * camera.position = [0, 0, 300];\n   * console.log(camera.position); // [0, 0, 300];\n   * ```\n   * @type {number[]}\n   */\n  public get position() { return [...this._position]; }\n\n  /**\n   * The current scale as number array([x, y, z]).\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.scale); // [1, 1, 1];\n   * camera.scale = [5, 1, 1];\n   * console.log(camera.scale); // [5, 1, 1];\n   * ```\n   * @type {number[]}\n   */\n  public get scale() { return [...this._scale]; }\n\n  /**\n   * The current euler rotation as number array([x, y, z]).\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.rotation); // [0, 0, 0];\n   * camera.rotation = [90, 0, 0];\n   * console.log(camera.rotation); // [90, 0, 0];\n   * ```\n   * @type {number[]}\n   */\n  public get rotation() { return [...this._rotation]; }\n\n  /**\n   * The current quaternion rotation as number array([x, y, z, w]).\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.quaternion); // [0, 0, 0, 1];\n   * camera.rotation = [90, 0, 0];\n   * console.log(camera.quaternion); // [0.7071067690849304, 0, 0, 0.7071067690849304];\n   * camera.quaternion = [0, 0, 0, 1];\n   * console.log(camera.rotation); // [0, -0, 0];\n   * ```\n   * @type {number[]}\n   */\n  public get quaternion() {\n    const r = this._rotation;\n    const quaternion = quat.fromEuler(quat.create(), r[0], r[1], r[2]);\n\n    return [...quaternion];\n  }\n\n  /**\n   * The current perspective value that will be applied to viewport element.\n   * ```\n   * const camera = new CSSCamera(el);\n   * camera.perspective = 300;\n   * console.log(camera.perspective); // 300\n   * ```\n   * @type {number}\n   */\n  public get perspective() { return this._perspective; }\n\n  /**\n   * The current perspective offset value that will be applied to camera element.\n   * ```\n   * const camera = new CSSCamera(el);\n   * camera.perspective = 300;\n   * console.log(camera.cameraCSS); // scale3d(1, 1, 1) translateZ(300px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n   * camera.perspectiveOffset = 100;\n   * console.log(camera.cameraCSS); // scale3d(1, 1, 1) translateZ(400px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n   * ```\n   * @type {number}\n   */\n  public get perspectiveOffset() { return this._perspectiveOffset; }\n\n  /**\n   * CSS string can be applied to camera element based on current transform.\n   * ```\n   * const camera = new CSSCamera(el);\n   * camera.perspective = 300;\n   * console.log(camera.cameraCSS); // scale3d(1, 1, 1) translateZ(300px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n   * ```\n   * @type {string}\n   */\n  public get cameraCSS() {\n    const perspective = this._perspective;\n    const perspectiveOffset = this._perspectiveOffset;\n    const rotation = this._rotation;\n    const scale = this._scale;\n\n    // Rotate in order of Z - Y - X\n    // tslint:disable-next-line: max-line-length\n    return `scale3d(${scale[0]}, ${scale[1]}, ${scale[2]}) translateZ(${perspective + perspectiveOffset}px) rotateX(${rotation[0]}deg) rotateY(${rotation[1]}deg) rotateZ(${rotation[2]}deg)`;\n  }\n\n  /**\n   * CSS string can be applied to world element based on current transform.\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.worldCSS); // \"translate3d(0px, 0px, 0px)\";\n   * camera.translate(0, 0, 300);\n   * console.log(camera.worldCSS); // \"translate3d(0px, 0px, -300px)\";\n   * ```\n   * @type {string}\n   */\n  public get worldCSS() {\n    const position = this._position;\n\n    return `translate3d(${-position[0]}px, ${-position[1]}px, ${-position[2]}px)`;\n  }\n\n  public set position(val: number[]) { this._position = vec3.fromValues(val[0], val[1], val[2]); }\n  public set scale(val: number[]) { this._scale = vec3.fromValues(val[0], val[1], val[2]); }\n  public set rotation(val: number[]) { this._rotation = vec3.fromValues(val[0], val[1], val[2]); }\n  public set quaternion(val: number[]) { this._rotation = quatToEuler(quat.fromValues(val[0], val[1], val[2], val[3])); }\n  public set perspective(val: number) { this._perspective = val; }\n  public set perspectiveOffset(val: number) { this._perspectiveOffset = val; }\n\n  /**\n   * Create new CSSCamera with given element / selector.\n   * @param - The element to apply camera. Can be HTMLElement or CSS selector.\n   */\n  constructor(el: string | HTMLElement) {\n    this._element = getElement(el);\n    this._position = vec3.create();\n    this._scale = vec3.fromValues(1, 1, 1);\n    this._rotation = vec3.create();\n    this._perspective = 0;\n    this._perspectiveOffset = 0;\n\n    const element = this._element;\n    const viewport = document.createElement('div');\n    const camera = viewport.cloneNode() as HTMLElement;\n    const world = viewport.cloneNode() as HTMLElement;\n\n    viewport.className = DEFAULT.CLASS.VIEWPORT;\n    camera.className = DEFAULT.CLASS.CAMERA;\n    world.className = DEFAULT.CLASS.WORLD;\n\n    applyCSS(viewport, DEFAULT.STYLE.VIEWPORT);\n    applyCSS(camera, DEFAULT.STYLE.CAMERA);\n    applyCSS(world, DEFAULT.STYLE.WORLD);\n\n    camera.appendChild(world);\n    viewport.appendChild(camera);\n\n    this._viewportEl = viewport;\n    this._cameraEl = camera;\n    this._worldEl = world;\n\n    // EL's PARENT -> VIEWPORT -> CAMERA -> WORLD -> EL\n    element.parentElement!.insertBefore(viewport, element);\n    world.appendChild(element);\n  }\n\n  /**\n   * Focus a camera to given element.\n   * After focus, element will be in front of camera with no rotation applied.\n   * Also, it will have original width / height if neither [scale](#scale) nor [perspectiveOffset](#perspectiveOffset) is applied.\n   * This method won't work if any of element's parent except camera element has scale applied.\n   * @param - The element to focus. Can be HTMLElement or CSS selector.\n   * @return {CSSCamera} The instance itself\n   */\n  public focus(el: string | HTMLElement): this {\n    const element = getElement(el);\n    const focusMatrix = this._getFocusMatrix(element);\n\n    const rotation = quat.create();\n    const translation = vec3.create();\n    mat4.getRotation(rotation, focusMatrix);\n    mat4.getTranslation(translation, focusMatrix);\n\n    const eulerAngle = quatToEuler(rotation);\n\n    vec3.negate(eulerAngle, eulerAngle);\n\n    this._rotation = eulerAngle;\n    this._position = translation;\n    return this;\n  }\n\n  /**\n   * Translate a camera in its local coordinate space.\n   * For example, `camera.translateLocal(0, 0, -300)` will always move camera to direction where it's seeing.\n   * @param - Amount of horizontal translation, in px.\n   * @param - Amount of vertical translation, in px.\n   * @param - Amount of translation in view direction, in px.\n   * @return {CSSCamera} The instance itself\n   */\n  public translateLocal(x: number = 0, y: number = 0, z: number = 0): this {\n    const position = this._position;\n    const rotation = this._rotation;\n\n    const transVec = vec3.fromValues(x, y, z);\n    const rotQuat = quat.create();\n    quat.fromEuler(rotQuat, -rotation[0], -rotation[1], -rotation[2]);\n    vec3.transformQuat(transVec, transVec, rotQuat);\n\n    vec3.add(position, position, transVec);\n    return this;\n  }\n\n  /**\n   * Translate a camera in world(absolute) coordinate space.\n   * @param - Amount of translation in x axis, in px.\n   * @param - Amount of translation in y axis, in px.\n   * @param - Amount of translation in z axis, in px.\n   * @return {CSSCamera} The instance itself\n   */\n  public translate(x: number = 0, y: number = 0, z: number = 0): this {\n    vec3.add(this._position, this._position, vec3.fromValues(x, y, z));\n\n    return this;\n  }\n\n  /**\n   * Rotate a camera in world(absolute) coordinate space.\n   * @param - Amount of rotation in x axis, in degree.\n   * @param - Amount of rotation in y axis, in degree.\n   * @param - Amount of rotation in z axis, in degree.\n   * @return {CSSCamera} The instance itself\n   */\n  public rotate(x: number = 0, y: number = 0, z: number = 0): this {\n    vec3.add(this._rotation, this._rotation, vec3.fromValues(x, y, z));\n\n    return this;\n  }\n\n  /**\n   * Updates a camera CSS with given duration.\n   * Every other camera transforming properties / methods will be batched until this method is called.\n   * ```\n   * const camera = new CSSCamera(el);\n   * console.log(camera.cameraEl.style.transform); // ''\n   *\n   * camera.perspective = 300;\n   * camera.translate(0, 0, 300);\n   * camera.rotate(0, 90, 0);\n   * console.log(camera.cameraEl.style.transform); // '', Not changed!\n   *\n   * await camera.update(1000); // Camera style is updated.\n   * console.log(camera.cameraEl.style.transform); // scale3d(1, 1, 1) translateZ(300px) rotateX(0deg) rotateY(90deg) rotateZ(0deg)\n   * ```\n   * @param - Transition duration in ms.\n   * @return {Promise<CSSCamera>} A promise resolving instance itself\n   */\n  public async update(duration: number = 0, option: Partial<UpdateOption>): Promise<this> {\n    const transitionDuration = duration > 0 ? `${duration}ms` : '0ms';\n    const mergedOption = Object.assign(Object.assign({}, DEFAULT.UPDATE_OPTION), option);\n    const updateOption = Object.keys(mergedOption).reduce((options: {[key: string]: ValueOf<UpdateOption>}, key) => {\n      options[`transition${key.charAt(0).toUpperCase() + key.slice(1)}`] = mergedOption[key as keyof UpdateOption];\n      return options;\n    }, {});\n\n    applyCSS(this._viewportEl, { perspective: `${this.perspective}px` });\n    applyCSS(this._cameraEl, {\n      transitionDuration,\n      ...updateOption,\n      transform: this.cameraCSS,\n    });\n    applyCSS(this._worldEl, {\n      transitionDuration,\n      ...updateOption,\n      transform: this.worldCSS,\n    });\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, duration);\n    });\n  }\n\n  private _getFocusMatrix(element: HTMLElement): mat4 {\n    const elements: HTMLElement[] = [];\n    while (element) {\n      elements.push(element);\n      if (element === this._element) break;\n      element = element.parentElement!;\n    }\n\n    // Order by shallow to deep\n    elements.reverse();\n\n    const elStyles = elements.map(el => window.getComputedStyle(el));\n\n    // Find first element that transform-style is not preserve-3d\n    // As all childs of that element is affected by its matrix\n    const firstFlatIndex = findIndex(elStyles, style => style.transformStyle !== 'preserve-3d');\n    if (firstFlatIndex > 0) { // el doesn't have to be preserve-3d'ed\n      elStyles.splice(firstFlatIndex + 1);\n    }\n\n    let parentOffset: Offset = {\n      left: 0,\n      top: 0,\n      width: this.viewportEl.offsetWidth,\n      height: this.viewportEl.offsetHeight,\n    };\n\n    // Accumulated rotation\n    const accRotation = quat.identity(quat.create());\n    // Assume center of screen as (0, 0, 0)\n    const centerPos = vec3.fromValues(0, 0, 0);\n\n    elStyles.forEach((style, idx) => {\n      const el = elements[idx];\n      const currentOffset = {\n        left: el.offsetLeft,\n        top: el.offsetTop,\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n      };\n      const transformMat = getTransformMatrix(style);\n      const offsetFromParent = getOffsetFromParent(currentOffset, parentOffset);\n      vec3.transformQuat(offsetFromParent, offsetFromParent, accRotation);\n\n      vec3.add(centerPos, centerPos, offsetFromParent);\n\n      const rotateOffset = getRotateOffset(style, currentOffset);\n      vec3.transformQuat(rotateOffset, rotateOffset, accRotation);\n\n      const transformOrigin = vec3.clone(centerPos);\n      vec3.add(transformOrigin, transformOrigin, rotateOffset);\n\n      const centerFromOrigin = vec3.create();\n      vec3.sub(centerFromOrigin, centerPos, transformOrigin);\n\n      const invAccRotation = quat.invert(quat.create(), accRotation);\n      vec3.transformQuat(centerFromOrigin, centerFromOrigin, invAccRotation);\n      vec3.transformMat4(centerFromOrigin, centerFromOrigin, transformMat);\n      vec3.transformQuat(centerFromOrigin, centerFromOrigin, accRotation);\n\n      const newCenterPos = vec3.add(vec3.create(), transformOrigin, centerFromOrigin);\n      const rotation = mat4.getRotation(quat.create(), transformMat);\n\n      vec3.copy(centerPos, newCenterPos);\n      quat.mul(accRotation, accRotation, rotation);\n      parentOffset = currentOffset;\n    });\n\n    const perspective = vec3.fromValues(0, 0, this.perspective);\n    vec3.transformQuat(perspective, perspective, accRotation);\n    vec3.add(centerPos, centerPos, perspective);\n\n    const matrix = mat4.create();\n    mat4.fromRotationTranslation(matrix, accRotation, centerPos);\n\n    return matrix;\n  }\n}\n\nexport default CSSCamera;\n"],"names":["ELEMENT_NOT_EXIST","selector","MUST_STRING_OR_ELEMENT","received","getElement","el","baseElement","queryResult","querySelector","document","Error","nodeName","nodeType","applyCSS","element","cssObj","Object","keys","forEach","property","style","getTransformMatrix","elStyle","trVal","getPropertyValue","transformStr","exec","matrixVal","split","map","val","parseFloat","length","mat4","fromValues","matrix","create","identity","getOffsetFromParent","currentOffset","parentOffset","offsetLeft","left","width","offsetTop","top","height","vec3","getRotateOffset","axis","transformOrigin","str","substring","ax","ay","findIndex","iterable","callback","i","clamp","min","max","Math","radToDeg","rad","PI","quatToEuler","q","rotM","fromQuat","m11","m12","m21","m22","m31","m32","m33","euler","asin","abs","atan2","FOV","ORTHOGRAPHIC","STYLE","VIEWPORT","overflow","CAMERA","WORLD","CLASS","UPDATE_OPTION","timingFunction","delay","_element","_position","_scale","_rotation","_perspective","_perspectiveOffset","viewport","createElement","camera","cloneNode","world","className","DEFAULT","appendChild","_viewportEl","_cameraEl","_worldEl","parentElement","insertBefore","CSSCamera","r","quaternion","quat","fromEuler","perspective","perspectiveOffset","rotation","scale","position","focusMatrix","_getFocusMatrix","translation","getRotation","getTranslation","eulerAngle","negate","x","y","z","transVec","rotQuat","transformQuat","add","duration","option","Promise","transitionDuration","mergedOption","assign","updateOption","reduce","options","key","charAt","toUpperCase","slice","transform","cameraCSS","worldCSS","resolve","setTimeout","elements","push","reverse","elStyles","window","getComputedStyle","firstFlatIndex","transformStyle","splice","viewportEl","offsetWidth","offsetHeight","accRotation","centerPos","idx","transformMat","offsetFromParent","rotateOffset","clone","centerFromOrigin","sub","invAccRotation","invert","transformMat4","newCenterPos","copy","mul","fromRotationTranslation"],"mappings":"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"}